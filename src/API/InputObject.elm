-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module API.InputObject exposing (..)

import API.Enum.ModelMutationType_
import API.Interface
import API.Object
import API.Scalar
import API.Union
import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Type for the AuthProviderAuth0 input object.
-}
type AuthProviderAuth0
    = AuthProviderAuth0 { idToken : String }


{-| Encode a AuthProviderAuth0 into a value that can be used as an argument.
-}
encodeAuthProviderAuth0 : AuthProviderAuth0 -> Value
encodeAuthProviderAuth0 (AuthProviderAuth0 input) =
    Encode.maybeObject
        [ ( "idToken", Encode.string input.idToken |> Just ) ]


{-| Type for the AuthProviderSignupData input object.
-}
type AuthProviderSignupData
    = AuthProviderSignupData { auth0 : OptionalArgument AuthProviderAuth0 }


{-| Encode a AuthProviderSignupData into a value that can be used as an argument.
-}
encodeAuthProviderSignupData : AuthProviderSignupData -> Value
encodeAuthProviderSignupData (AuthProviderSignupData input) =
    Encode.maybeObject
        [ ( "auth0", encodeAuthProviderAuth0 |> Encode.optional input.auth0 ) ]


{-| Type for the ChapterFilter input object.
-}
type ChapterFilter
    = ChapterFilter { and : OptionalArgument (List ChapterFilter), or : OptionalArgument (List ChapterFilter), createdAt : OptionalArgument API.Scalar.DateTime, createdAt_not : OptionalArgument API.Scalar.DateTime, createdAt_in : OptionalArgument (List API.Scalar.DateTime), createdAt_not_in : OptionalArgument (List API.Scalar.DateTime), createdAt_lt : OptionalArgument API.Scalar.DateTime, createdAt_lte : OptionalArgument API.Scalar.DateTime, createdAt_gt : OptionalArgument API.Scalar.DateTime, createdAt_gte : OptionalArgument API.Scalar.DateTime, id : OptionalArgument API.Scalar.Id, id_not : OptionalArgument API.Scalar.Id, id_in : OptionalArgument (List API.Scalar.Id), id_not_in : OptionalArgument (List API.Scalar.Id), id_lt : OptionalArgument API.Scalar.Id, id_lte : OptionalArgument API.Scalar.Id, id_gt : OptionalArgument API.Scalar.Id, id_gte : OptionalArgument API.Scalar.Id, id_contains : OptionalArgument API.Scalar.Id, id_not_contains : OptionalArgument API.Scalar.Id, id_starts_with : OptionalArgument API.Scalar.Id, id_not_starts_with : OptionalArgument API.Scalar.Id, id_ends_with : OptionalArgument API.Scalar.Id, id_not_ends_with : OptionalArgument API.Scalar.Id, number : OptionalArgument Int, number_not : OptionalArgument Int, number_in : OptionalArgument (List Int), number_not_in : OptionalArgument (List Int), number_lt : OptionalArgument Int, number_lte : OptionalArgument Int, number_gt : OptionalArgument Int, number_gte : OptionalArgument Int, part : OptionalArgument Int, part_not : OptionalArgument Int, part_in : OptionalArgument (List Int), part_not_in : OptionalArgument (List Int), part_lt : OptionalArgument Int, part_lte : OptionalArgument Int, part_gt : OptionalArgument Int, part_gte : OptionalArgument Int, updatedAt : OptionalArgument API.Scalar.DateTime, updatedAt_not : OptionalArgument API.Scalar.DateTime, updatedAt_in : OptionalArgument (List API.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List API.Scalar.DateTime), updatedAt_lt : OptionalArgument API.Scalar.DateTime, updatedAt_lte : OptionalArgument API.Scalar.DateTime, updatedAt_gt : OptionalArgument API.Scalar.DateTime, updatedAt_gte : OptionalArgument API.Scalar.DateTime }


{-| Encode a ChapterFilter into a value that can be used as an argument.
-}
encodeChapterFilter : ChapterFilter -> Value
encodeChapterFilter (ChapterFilter input) =
    Encode.maybeObject
        [ ( "and", (encodeChapterFilter |> Encode.list) |> Encode.optional input.and ), ( "or", (encodeChapterFilter |> Encode.list) |> Encode.optional input.or ), ( "createdAt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt ), ( "createdAt_not", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gte ), ( "id", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "number", Encode.int |> Encode.optional input.number ), ( "number_not", Encode.int |> Encode.optional input.number_not ), ( "number_in", (Encode.int |> Encode.list) |> Encode.optional input.number_in ), ( "number_not_in", (Encode.int |> Encode.list) |> Encode.optional input.number_not_in ), ( "number_lt", Encode.int |> Encode.optional input.number_lt ), ( "number_lte", Encode.int |> Encode.optional input.number_lte ), ( "number_gt", Encode.int |> Encode.optional input.number_gt ), ( "number_gte", Encode.int |> Encode.optional input.number_gte ), ( "part", Encode.int |> Encode.optional input.part ), ( "part_not", Encode.int |> Encode.optional input.part_not ), ( "part_in", (Encode.int |> Encode.list) |> Encode.optional input.part_in ), ( "part_not_in", (Encode.int |> Encode.list) |> Encode.optional input.part_not_in ), ( "part_lt", Encode.int |> Encode.optional input.part_lt ), ( "part_lte", Encode.int |> Encode.optional input.part_lte ), ( "part_gt", Encode.int |> Encode.optional input.part_gt ), ( "part_gte", Encode.int |> Encode.optional input.part_gte ), ( "updatedAt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gte ) ]


{-| Type for the ChapterSubscriptionFilter input object.
-}
type ChapterSubscriptionFilter
    = ChapterSubscriptionFilter { and : OptionalArgument (List ChapterSubscriptionFilter), or : OptionalArgument (List ChapterSubscriptionFilter), mutation_in : OptionalArgument (List API.Enum.ModelMutationType_.ModelMutationType_), updatedFields_contains : OptionalArgument String, updatedFields_contains_every : OptionalArgument (List String), updatedFields_contains_some : OptionalArgument (List String), node : OptionalArgument ChapterSubscriptionFilterNode }


{-| Encode a ChapterSubscriptionFilter into a value that can be used as an argument.
-}
encodeChapterSubscriptionFilter : ChapterSubscriptionFilter -> Value
encodeChapterSubscriptionFilter (ChapterSubscriptionFilter input) =
    Encode.maybeObject
        [ ( "and", (encodeChapterSubscriptionFilter |> Encode.list) |> Encode.optional input.and ), ( "or", (encodeChapterSubscriptionFilter |> Encode.list) |> Encode.optional input.or ), ( "mutation_in", (Encode.enum API.Enum.ModelMutationType_.toString |> Encode.list) |> Encode.optional input.mutation_in ), ( "updatedFields_contains", Encode.string |> Encode.optional input.updatedFields_contains ), ( "updatedFields_contains_every", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_every ), ( "updatedFields_contains_some", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_some ), ( "node", encodeChapterSubscriptionFilterNode |> Encode.optional input.node ) ]


{-| Type for the ChapterSubscriptionFilterNode input object.
-}
type ChapterSubscriptionFilterNode
    = ChapterSubscriptionFilterNode { createdAt : OptionalArgument API.Scalar.DateTime, createdAt_not : OptionalArgument API.Scalar.DateTime, createdAt_in : OptionalArgument (List API.Scalar.DateTime), createdAt_not_in : OptionalArgument (List API.Scalar.DateTime), createdAt_lt : OptionalArgument API.Scalar.DateTime, createdAt_lte : OptionalArgument API.Scalar.DateTime, createdAt_gt : OptionalArgument API.Scalar.DateTime, createdAt_gte : OptionalArgument API.Scalar.DateTime, id : OptionalArgument API.Scalar.Id, id_not : OptionalArgument API.Scalar.Id, id_in : OptionalArgument (List API.Scalar.Id), id_not_in : OptionalArgument (List API.Scalar.Id), id_lt : OptionalArgument API.Scalar.Id, id_lte : OptionalArgument API.Scalar.Id, id_gt : OptionalArgument API.Scalar.Id, id_gte : OptionalArgument API.Scalar.Id, id_contains : OptionalArgument API.Scalar.Id, id_not_contains : OptionalArgument API.Scalar.Id, id_starts_with : OptionalArgument API.Scalar.Id, id_not_starts_with : OptionalArgument API.Scalar.Id, id_ends_with : OptionalArgument API.Scalar.Id, id_not_ends_with : OptionalArgument API.Scalar.Id, number : OptionalArgument Int, number_not : OptionalArgument Int, number_in : OptionalArgument (List Int), number_not_in : OptionalArgument (List Int), number_lt : OptionalArgument Int, number_lte : OptionalArgument Int, number_gt : OptionalArgument Int, number_gte : OptionalArgument Int, part : OptionalArgument Int, part_not : OptionalArgument Int, part_in : OptionalArgument (List Int), part_not_in : OptionalArgument (List Int), part_lt : OptionalArgument Int, part_lte : OptionalArgument Int, part_gt : OptionalArgument Int, part_gte : OptionalArgument Int, updatedAt : OptionalArgument API.Scalar.DateTime, updatedAt_not : OptionalArgument API.Scalar.DateTime, updatedAt_in : OptionalArgument (List API.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List API.Scalar.DateTime), updatedAt_lt : OptionalArgument API.Scalar.DateTime, updatedAt_lte : OptionalArgument API.Scalar.DateTime, updatedAt_gt : OptionalArgument API.Scalar.DateTime, updatedAt_gte : OptionalArgument API.Scalar.DateTime }


{-| Encode a ChapterSubscriptionFilterNode into a value that can be used as an argument.
-}
encodeChapterSubscriptionFilterNode : ChapterSubscriptionFilterNode -> Value
encodeChapterSubscriptionFilterNode (ChapterSubscriptionFilterNode input) =
    Encode.maybeObject
        [ ( "createdAt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt ), ( "createdAt_not", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gte ), ( "id", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "number", Encode.int |> Encode.optional input.number ), ( "number_not", Encode.int |> Encode.optional input.number_not ), ( "number_in", (Encode.int |> Encode.list) |> Encode.optional input.number_in ), ( "number_not_in", (Encode.int |> Encode.list) |> Encode.optional input.number_not_in ), ( "number_lt", Encode.int |> Encode.optional input.number_lt ), ( "number_lte", Encode.int |> Encode.optional input.number_lte ), ( "number_gt", Encode.int |> Encode.optional input.number_gt ), ( "number_gte", Encode.int |> Encode.optional input.number_gte ), ( "part", Encode.int |> Encode.optional input.part ), ( "part_not", Encode.int |> Encode.optional input.part_not ), ( "part_in", (Encode.int |> Encode.list) |> Encode.optional input.part_in ), ( "part_not_in", (Encode.int |> Encode.list) |> Encode.optional input.part_not_in ), ( "part_lt", Encode.int |> Encode.optional input.part_lt ), ( "part_lte", Encode.int |> Encode.optional input.part_lte ), ( "part_gt", Encode.int |> Encode.optional input.part_gt ), ( "part_gte", Encode.int |> Encode.optional input.part_gte ), ( "updatedAt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gte ) ]


{-| Type for the CreateChapter input object.
-}
type CreateChapter
    = CreateChapter { number : Int, part : OptionalArgument Int }


{-| Encode a CreateChapter into a value that can be used as an argument.
-}
encodeCreateChapter : CreateChapter -> Value
encodeCreateChapter (CreateChapter input) =
    Encode.maybeObject
        [ ( "number", Encode.int input.number |> Just ), ( "part", Encode.int |> Encode.optional input.part ) ]


{-| Type for the CreateFile input object.
-}
type CreateFile
    = CreateFile { name : String }


{-| Encode a CreateFile into a value that can be used as an argument.
-}
encodeCreateFile : CreateFile -> Value
encodeCreateFile (CreateFile input) =
    Encode.maybeObject
        [ ( "name", Encode.string input.name |> Just ) ]


{-| Type for the CreateSection input object.
-}
type CreateSection
    = CreateSection { title : String }


{-| Encode a CreateSection into a value that can be used as an argument.
-}
encodeCreateSection : CreateSection -> Value
encodeCreateSection (CreateSection input) =
    Encode.maybeObject
        [ ( "title", Encode.string input.title |> Just ) ]


{-| Type for the FileFilter input object.
-}
type FileFilter
    = FileFilter { and : OptionalArgument (List FileFilter), or : OptionalArgument (List FileFilter), contentType : OptionalArgument String, contentType_not : OptionalArgument String, contentType_in : OptionalArgument (List String), contentType_not_in : OptionalArgument (List String), contentType_lt : OptionalArgument String, contentType_lte : OptionalArgument String, contentType_gt : OptionalArgument String, contentType_gte : OptionalArgument String, contentType_contains : OptionalArgument String, contentType_not_contains : OptionalArgument String, contentType_starts_with : OptionalArgument String, contentType_not_starts_with : OptionalArgument String, contentType_ends_with : OptionalArgument String, contentType_not_ends_with : OptionalArgument String, createdAt : OptionalArgument API.Scalar.DateTime, createdAt_not : OptionalArgument API.Scalar.DateTime, createdAt_in : OptionalArgument (List API.Scalar.DateTime), createdAt_not_in : OptionalArgument (List API.Scalar.DateTime), createdAt_lt : OptionalArgument API.Scalar.DateTime, createdAt_lte : OptionalArgument API.Scalar.DateTime, createdAt_gt : OptionalArgument API.Scalar.DateTime, createdAt_gte : OptionalArgument API.Scalar.DateTime, id : OptionalArgument API.Scalar.Id, id_not : OptionalArgument API.Scalar.Id, id_in : OptionalArgument (List API.Scalar.Id), id_not_in : OptionalArgument (List API.Scalar.Id), id_lt : OptionalArgument API.Scalar.Id, id_lte : OptionalArgument API.Scalar.Id, id_gt : OptionalArgument API.Scalar.Id, id_gte : OptionalArgument API.Scalar.Id, id_contains : OptionalArgument API.Scalar.Id, id_not_contains : OptionalArgument API.Scalar.Id, id_starts_with : OptionalArgument API.Scalar.Id, id_not_starts_with : OptionalArgument API.Scalar.Id, id_ends_with : OptionalArgument API.Scalar.Id, id_not_ends_with : OptionalArgument API.Scalar.Id, name : OptionalArgument String, name_not : OptionalArgument String, name_in : OptionalArgument (List String), name_not_in : OptionalArgument (List String), name_lt : OptionalArgument String, name_lte : OptionalArgument String, name_gt : OptionalArgument String, name_gte : OptionalArgument String, name_contains : OptionalArgument String, name_not_contains : OptionalArgument String, name_starts_with : OptionalArgument String, name_not_starts_with : OptionalArgument String, name_ends_with : OptionalArgument String, name_not_ends_with : OptionalArgument String, secret : OptionalArgument String, secret_not : OptionalArgument String, secret_in : OptionalArgument (List String), secret_not_in : OptionalArgument (List String), secret_lt : OptionalArgument String, secret_lte : OptionalArgument String, secret_gt : OptionalArgument String, secret_gte : OptionalArgument String, secret_contains : OptionalArgument String, secret_not_contains : OptionalArgument String, secret_starts_with : OptionalArgument String, secret_not_starts_with : OptionalArgument String, secret_ends_with : OptionalArgument String, secret_not_ends_with : OptionalArgument String, size : OptionalArgument Int, size_not : OptionalArgument Int, size_in : OptionalArgument (List Int), size_not_in : OptionalArgument (List Int), size_lt : OptionalArgument Int, size_lte : OptionalArgument Int, size_gt : OptionalArgument Int, size_gte : OptionalArgument Int, updatedAt : OptionalArgument API.Scalar.DateTime, updatedAt_not : OptionalArgument API.Scalar.DateTime, updatedAt_in : OptionalArgument (List API.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List API.Scalar.DateTime), updatedAt_lt : OptionalArgument API.Scalar.DateTime, updatedAt_lte : OptionalArgument API.Scalar.DateTime, updatedAt_gt : OptionalArgument API.Scalar.DateTime, updatedAt_gte : OptionalArgument API.Scalar.DateTime, url : OptionalArgument String, url_not : OptionalArgument String, url_in : OptionalArgument (List String), url_not_in : OptionalArgument (List String), url_lt : OptionalArgument String, url_lte : OptionalArgument String, url_gt : OptionalArgument String, url_gte : OptionalArgument String, url_contains : OptionalArgument String, url_not_contains : OptionalArgument String, url_starts_with : OptionalArgument String, url_not_starts_with : OptionalArgument String, url_ends_with : OptionalArgument String, url_not_ends_with : OptionalArgument String }


{-| Encode a FileFilter into a value that can be used as an argument.
-}
encodeFileFilter : FileFilter -> Value
encodeFileFilter (FileFilter input) =
    Encode.maybeObject
        [ ( "and", (encodeFileFilter |> Encode.list) |> Encode.optional input.and ), ( "or", (encodeFileFilter |> Encode.list) |> Encode.optional input.or ), ( "contentType", Encode.string |> Encode.optional input.contentType ), ( "contentType_not", Encode.string |> Encode.optional input.contentType_not ), ( "contentType_in", (Encode.string |> Encode.list) |> Encode.optional input.contentType_in ), ( "contentType_not_in", (Encode.string |> Encode.list) |> Encode.optional input.contentType_not_in ), ( "contentType_lt", Encode.string |> Encode.optional input.contentType_lt ), ( "contentType_lte", Encode.string |> Encode.optional input.contentType_lte ), ( "contentType_gt", Encode.string |> Encode.optional input.contentType_gt ), ( "contentType_gte", Encode.string |> Encode.optional input.contentType_gte ), ( "contentType_contains", Encode.string |> Encode.optional input.contentType_contains ), ( "contentType_not_contains", Encode.string |> Encode.optional input.contentType_not_contains ), ( "contentType_starts_with", Encode.string |> Encode.optional input.contentType_starts_with ), ( "contentType_not_starts_with", Encode.string |> Encode.optional input.contentType_not_starts_with ), ( "contentType_ends_with", Encode.string |> Encode.optional input.contentType_ends_with ), ( "contentType_not_ends_with", Encode.string |> Encode.optional input.contentType_not_ends_with ), ( "createdAt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt ), ( "createdAt_not", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gte ), ( "id", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "secret", Encode.string |> Encode.optional input.secret ), ( "secret_not", Encode.string |> Encode.optional input.secret_not ), ( "secret_in", (Encode.string |> Encode.list) |> Encode.optional input.secret_in ), ( "secret_not_in", (Encode.string |> Encode.list) |> Encode.optional input.secret_not_in ), ( "secret_lt", Encode.string |> Encode.optional input.secret_lt ), ( "secret_lte", Encode.string |> Encode.optional input.secret_lte ), ( "secret_gt", Encode.string |> Encode.optional input.secret_gt ), ( "secret_gte", Encode.string |> Encode.optional input.secret_gte ), ( "secret_contains", Encode.string |> Encode.optional input.secret_contains ), ( "secret_not_contains", Encode.string |> Encode.optional input.secret_not_contains ), ( "secret_starts_with", Encode.string |> Encode.optional input.secret_starts_with ), ( "secret_not_starts_with", Encode.string |> Encode.optional input.secret_not_starts_with ), ( "secret_ends_with", Encode.string |> Encode.optional input.secret_ends_with ), ( "secret_not_ends_with", Encode.string |> Encode.optional input.secret_not_ends_with ), ( "size", Encode.int |> Encode.optional input.size ), ( "size_not", Encode.int |> Encode.optional input.size_not ), ( "size_in", (Encode.int |> Encode.list) |> Encode.optional input.size_in ), ( "size_not_in", (Encode.int |> Encode.list) |> Encode.optional input.size_not_in ), ( "size_lt", Encode.int |> Encode.optional input.size_lt ), ( "size_lte", Encode.int |> Encode.optional input.size_lte ), ( "size_gt", Encode.int |> Encode.optional input.size_gt ), ( "size_gte", Encode.int |> Encode.optional input.size_gte ), ( "updatedAt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gte ), ( "url", Encode.string |> Encode.optional input.url ), ( "url_not", Encode.string |> Encode.optional input.url_not ), ( "url_in", (Encode.string |> Encode.list) |> Encode.optional input.url_in ), ( "url_not_in", (Encode.string |> Encode.list) |> Encode.optional input.url_not_in ), ( "url_lt", Encode.string |> Encode.optional input.url_lt ), ( "url_lte", Encode.string |> Encode.optional input.url_lte ), ( "url_gt", Encode.string |> Encode.optional input.url_gt ), ( "url_gte", Encode.string |> Encode.optional input.url_gte ), ( "url_contains", Encode.string |> Encode.optional input.url_contains ), ( "url_not_contains", Encode.string |> Encode.optional input.url_not_contains ), ( "url_starts_with", Encode.string |> Encode.optional input.url_starts_with ), ( "url_not_starts_with", Encode.string |> Encode.optional input.url_not_starts_with ), ( "url_ends_with", Encode.string |> Encode.optional input.url_ends_with ), ( "url_not_ends_with", Encode.string |> Encode.optional input.url_not_ends_with ) ]


{-| Type for the FileSubscriptionFilter input object.
-}
type FileSubscriptionFilter
    = FileSubscriptionFilter { and : OptionalArgument (List FileSubscriptionFilter), or : OptionalArgument (List FileSubscriptionFilter), mutation_in : OptionalArgument (List API.Enum.ModelMutationType_.ModelMutationType_), updatedFields_contains : OptionalArgument String, updatedFields_contains_every : OptionalArgument (List String), updatedFields_contains_some : OptionalArgument (List String), node : OptionalArgument FileSubscriptionFilterNode }


{-| Encode a FileSubscriptionFilter into a value that can be used as an argument.
-}
encodeFileSubscriptionFilter : FileSubscriptionFilter -> Value
encodeFileSubscriptionFilter (FileSubscriptionFilter input) =
    Encode.maybeObject
        [ ( "and", (encodeFileSubscriptionFilter |> Encode.list) |> Encode.optional input.and ), ( "or", (encodeFileSubscriptionFilter |> Encode.list) |> Encode.optional input.or ), ( "mutation_in", (Encode.enum API.Enum.ModelMutationType_.toString |> Encode.list) |> Encode.optional input.mutation_in ), ( "updatedFields_contains", Encode.string |> Encode.optional input.updatedFields_contains ), ( "updatedFields_contains_every", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_every ), ( "updatedFields_contains_some", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_some ), ( "node", encodeFileSubscriptionFilterNode |> Encode.optional input.node ) ]


{-| Type for the FileSubscriptionFilterNode input object.
-}
type FileSubscriptionFilterNode
    = FileSubscriptionFilterNode { contentType : OptionalArgument String, contentType_not : OptionalArgument String, contentType_in : OptionalArgument (List String), contentType_not_in : OptionalArgument (List String), contentType_lt : OptionalArgument String, contentType_lte : OptionalArgument String, contentType_gt : OptionalArgument String, contentType_gte : OptionalArgument String, contentType_contains : OptionalArgument String, contentType_not_contains : OptionalArgument String, contentType_starts_with : OptionalArgument String, contentType_not_starts_with : OptionalArgument String, contentType_ends_with : OptionalArgument String, contentType_not_ends_with : OptionalArgument String, createdAt : OptionalArgument API.Scalar.DateTime, createdAt_not : OptionalArgument API.Scalar.DateTime, createdAt_in : OptionalArgument (List API.Scalar.DateTime), createdAt_not_in : OptionalArgument (List API.Scalar.DateTime), createdAt_lt : OptionalArgument API.Scalar.DateTime, createdAt_lte : OptionalArgument API.Scalar.DateTime, createdAt_gt : OptionalArgument API.Scalar.DateTime, createdAt_gte : OptionalArgument API.Scalar.DateTime, id : OptionalArgument API.Scalar.Id, id_not : OptionalArgument API.Scalar.Id, id_in : OptionalArgument (List API.Scalar.Id), id_not_in : OptionalArgument (List API.Scalar.Id), id_lt : OptionalArgument API.Scalar.Id, id_lte : OptionalArgument API.Scalar.Id, id_gt : OptionalArgument API.Scalar.Id, id_gte : OptionalArgument API.Scalar.Id, id_contains : OptionalArgument API.Scalar.Id, id_not_contains : OptionalArgument API.Scalar.Id, id_starts_with : OptionalArgument API.Scalar.Id, id_not_starts_with : OptionalArgument API.Scalar.Id, id_ends_with : OptionalArgument API.Scalar.Id, id_not_ends_with : OptionalArgument API.Scalar.Id, name : OptionalArgument String, name_not : OptionalArgument String, name_in : OptionalArgument (List String), name_not_in : OptionalArgument (List String), name_lt : OptionalArgument String, name_lte : OptionalArgument String, name_gt : OptionalArgument String, name_gte : OptionalArgument String, name_contains : OptionalArgument String, name_not_contains : OptionalArgument String, name_starts_with : OptionalArgument String, name_not_starts_with : OptionalArgument String, name_ends_with : OptionalArgument String, name_not_ends_with : OptionalArgument String, secret : OptionalArgument String, secret_not : OptionalArgument String, secret_in : OptionalArgument (List String), secret_not_in : OptionalArgument (List String), secret_lt : OptionalArgument String, secret_lte : OptionalArgument String, secret_gt : OptionalArgument String, secret_gte : OptionalArgument String, secret_contains : OptionalArgument String, secret_not_contains : OptionalArgument String, secret_starts_with : OptionalArgument String, secret_not_starts_with : OptionalArgument String, secret_ends_with : OptionalArgument String, secret_not_ends_with : OptionalArgument String, size : OptionalArgument Int, size_not : OptionalArgument Int, size_in : OptionalArgument (List Int), size_not_in : OptionalArgument (List Int), size_lt : OptionalArgument Int, size_lte : OptionalArgument Int, size_gt : OptionalArgument Int, size_gte : OptionalArgument Int, updatedAt : OptionalArgument API.Scalar.DateTime, updatedAt_not : OptionalArgument API.Scalar.DateTime, updatedAt_in : OptionalArgument (List API.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List API.Scalar.DateTime), updatedAt_lt : OptionalArgument API.Scalar.DateTime, updatedAt_lte : OptionalArgument API.Scalar.DateTime, updatedAt_gt : OptionalArgument API.Scalar.DateTime, updatedAt_gte : OptionalArgument API.Scalar.DateTime, url : OptionalArgument String, url_not : OptionalArgument String, url_in : OptionalArgument (List String), url_not_in : OptionalArgument (List String), url_lt : OptionalArgument String, url_lte : OptionalArgument String, url_gt : OptionalArgument String, url_gte : OptionalArgument String, url_contains : OptionalArgument String, url_not_contains : OptionalArgument String, url_starts_with : OptionalArgument String, url_not_starts_with : OptionalArgument String, url_ends_with : OptionalArgument String, url_not_ends_with : OptionalArgument String }


{-| Encode a FileSubscriptionFilterNode into a value that can be used as an argument.
-}
encodeFileSubscriptionFilterNode : FileSubscriptionFilterNode -> Value
encodeFileSubscriptionFilterNode (FileSubscriptionFilterNode input) =
    Encode.maybeObject
        [ ( "contentType", Encode.string |> Encode.optional input.contentType ), ( "contentType_not", Encode.string |> Encode.optional input.contentType_not ), ( "contentType_in", (Encode.string |> Encode.list) |> Encode.optional input.contentType_in ), ( "contentType_not_in", (Encode.string |> Encode.list) |> Encode.optional input.contentType_not_in ), ( "contentType_lt", Encode.string |> Encode.optional input.contentType_lt ), ( "contentType_lte", Encode.string |> Encode.optional input.contentType_lte ), ( "contentType_gt", Encode.string |> Encode.optional input.contentType_gt ), ( "contentType_gte", Encode.string |> Encode.optional input.contentType_gte ), ( "contentType_contains", Encode.string |> Encode.optional input.contentType_contains ), ( "contentType_not_contains", Encode.string |> Encode.optional input.contentType_not_contains ), ( "contentType_starts_with", Encode.string |> Encode.optional input.contentType_starts_with ), ( "contentType_not_starts_with", Encode.string |> Encode.optional input.contentType_not_starts_with ), ( "contentType_ends_with", Encode.string |> Encode.optional input.contentType_ends_with ), ( "contentType_not_ends_with", Encode.string |> Encode.optional input.contentType_not_ends_with ), ( "createdAt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt ), ( "createdAt_not", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gte ), ( "id", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "secret", Encode.string |> Encode.optional input.secret ), ( "secret_not", Encode.string |> Encode.optional input.secret_not ), ( "secret_in", (Encode.string |> Encode.list) |> Encode.optional input.secret_in ), ( "secret_not_in", (Encode.string |> Encode.list) |> Encode.optional input.secret_not_in ), ( "secret_lt", Encode.string |> Encode.optional input.secret_lt ), ( "secret_lte", Encode.string |> Encode.optional input.secret_lte ), ( "secret_gt", Encode.string |> Encode.optional input.secret_gt ), ( "secret_gte", Encode.string |> Encode.optional input.secret_gte ), ( "secret_contains", Encode.string |> Encode.optional input.secret_contains ), ( "secret_not_contains", Encode.string |> Encode.optional input.secret_not_contains ), ( "secret_starts_with", Encode.string |> Encode.optional input.secret_starts_with ), ( "secret_not_starts_with", Encode.string |> Encode.optional input.secret_not_starts_with ), ( "secret_ends_with", Encode.string |> Encode.optional input.secret_ends_with ), ( "secret_not_ends_with", Encode.string |> Encode.optional input.secret_not_ends_with ), ( "size", Encode.int |> Encode.optional input.size ), ( "size_not", Encode.int |> Encode.optional input.size_not ), ( "size_in", (Encode.int |> Encode.list) |> Encode.optional input.size_in ), ( "size_not_in", (Encode.int |> Encode.list) |> Encode.optional input.size_not_in ), ( "size_lt", Encode.int |> Encode.optional input.size_lt ), ( "size_lte", Encode.int |> Encode.optional input.size_lte ), ( "size_gt", Encode.int |> Encode.optional input.size_gt ), ( "size_gte", Encode.int |> Encode.optional input.size_gte ), ( "updatedAt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gte ), ( "url", Encode.string |> Encode.optional input.url ), ( "url_not", Encode.string |> Encode.optional input.url_not ), ( "url_in", (Encode.string |> Encode.list) |> Encode.optional input.url_in ), ( "url_not_in", (Encode.string |> Encode.list) |> Encode.optional input.url_not_in ), ( "url_lt", Encode.string |> Encode.optional input.url_lt ), ( "url_lte", Encode.string |> Encode.optional input.url_lte ), ( "url_gt", Encode.string |> Encode.optional input.url_gt ), ( "url_gte", Encode.string |> Encode.optional input.url_gte ), ( "url_contains", Encode.string |> Encode.optional input.url_contains ), ( "url_not_contains", Encode.string |> Encode.optional input.url_not_contains ), ( "url_starts_with", Encode.string |> Encode.optional input.url_starts_with ), ( "url_not_starts_with", Encode.string |> Encode.optional input.url_not_starts_with ), ( "url_ends_with", Encode.string |> Encode.optional input.url_ends_with ), ( "url_not_ends_with", Encode.string |> Encode.optional input.url_not_ends_with ) ]


{-| Type for the SectionFilter input object.
-}
type SectionFilter
    = SectionFilter { and : OptionalArgument (List SectionFilter), or : OptionalArgument (List SectionFilter), id : OptionalArgument API.Scalar.Id, id_not : OptionalArgument API.Scalar.Id, id_in : OptionalArgument (List API.Scalar.Id), id_not_in : OptionalArgument (List API.Scalar.Id), id_lt : OptionalArgument API.Scalar.Id, id_lte : OptionalArgument API.Scalar.Id, id_gt : OptionalArgument API.Scalar.Id, id_gte : OptionalArgument API.Scalar.Id, id_contains : OptionalArgument API.Scalar.Id, id_not_contains : OptionalArgument API.Scalar.Id, id_starts_with : OptionalArgument API.Scalar.Id, id_not_starts_with : OptionalArgument API.Scalar.Id, id_ends_with : OptionalArgument API.Scalar.Id, id_not_ends_with : OptionalArgument API.Scalar.Id, title : OptionalArgument String, title_not : OptionalArgument String, title_in : OptionalArgument (List String), title_not_in : OptionalArgument (List String), title_lt : OptionalArgument String, title_lte : OptionalArgument String, title_gt : OptionalArgument String, title_gte : OptionalArgument String, title_contains : OptionalArgument String, title_not_contains : OptionalArgument String, title_starts_with : OptionalArgument String, title_not_starts_with : OptionalArgument String, title_ends_with : OptionalArgument String, title_not_ends_with : OptionalArgument String }


{-| Encode a SectionFilter into a value that can be used as an argument.
-}
encodeSectionFilter : SectionFilter -> Value
encodeSectionFilter (SectionFilter input) =
    Encode.maybeObject
        [ ( "and", (encodeSectionFilter |> Encode.list) |> Encode.optional input.and ), ( "or", (encodeSectionFilter |> Encode.list) |> Encode.optional input.or ), ( "id", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "title", Encode.string |> Encode.optional input.title ), ( "title_not", Encode.string |> Encode.optional input.title_not ), ( "title_in", (Encode.string |> Encode.list) |> Encode.optional input.title_in ), ( "title_not_in", (Encode.string |> Encode.list) |> Encode.optional input.title_not_in ), ( "title_lt", Encode.string |> Encode.optional input.title_lt ), ( "title_lte", Encode.string |> Encode.optional input.title_lte ), ( "title_gt", Encode.string |> Encode.optional input.title_gt ), ( "title_gte", Encode.string |> Encode.optional input.title_gte ), ( "title_contains", Encode.string |> Encode.optional input.title_contains ), ( "title_not_contains", Encode.string |> Encode.optional input.title_not_contains ), ( "title_starts_with", Encode.string |> Encode.optional input.title_starts_with ), ( "title_not_starts_with", Encode.string |> Encode.optional input.title_not_starts_with ), ( "title_ends_with", Encode.string |> Encode.optional input.title_ends_with ), ( "title_not_ends_with", Encode.string |> Encode.optional input.title_not_ends_with ) ]


{-| Type for the SectionSubscriptionFilter input object.
-}
type SectionSubscriptionFilter
    = SectionSubscriptionFilter { and : OptionalArgument (List SectionSubscriptionFilter), or : OptionalArgument (List SectionSubscriptionFilter), mutation_in : OptionalArgument (List API.Enum.ModelMutationType_.ModelMutationType_), updatedFields_contains : OptionalArgument String, updatedFields_contains_every : OptionalArgument (List String), updatedFields_contains_some : OptionalArgument (List String), node : OptionalArgument SectionSubscriptionFilterNode }


{-| Encode a SectionSubscriptionFilter into a value that can be used as an argument.
-}
encodeSectionSubscriptionFilter : SectionSubscriptionFilter -> Value
encodeSectionSubscriptionFilter (SectionSubscriptionFilter input) =
    Encode.maybeObject
        [ ( "and", (encodeSectionSubscriptionFilter |> Encode.list) |> Encode.optional input.and ), ( "or", (encodeSectionSubscriptionFilter |> Encode.list) |> Encode.optional input.or ), ( "mutation_in", (Encode.enum API.Enum.ModelMutationType_.toString |> Encode.list) |> Encode.optional input.mutation_in ), ( "updatedFields_contains", Encode.string |> Encode.optional input.updatedFields_contains ), ( "updatedFields_contains_every", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_every ), ( "updatedFields_contains_some", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_some ), ( "node", encodeSectionSubscriptionFilterNode |> Encode.optional input.node ) ]


{-| Type for the SectionSubscriptionFilterNode input object.
-}
type SectionSubscriptionFilterNode
    = SectionSubscriptionFilterNode { id : OptionalArgument API.Scalar.Id, id_not : OptionalArgument API.Scalar.Id, id_in : OptionalArgument (List API.Scalar.Id), id_not_in : OptionalArgument (List API.Scalar.Id), id_lt : OptionalArgument API.Scalar.Id, id_lte : OptionalArgument API.Scalar.Id, id_gt : OptionalArgument API.Scalar.Id, id_gte : OptionalArgument API.Scalar.Id, id_contains : OptionalArgument API.Scalar.Id, id_not_contains : OptionalArgument API.Scalar.Id, id_starts_with : OptionalArgument API.Scalar.Id, id_not_starts_with : OptionalArgument API.Scalar.Id, id_ends_with : OptionalArgument API.Scalar.Id, id_not_ends_with : OptionalArgument API.Scalar.Id, title : OptionalArgument String, title_not : OptionalArgument String, title_in : OptionalArgument (List String), title_not_in : OptionalArgument (List String), title_lt : OptionalArgument String, title_lte : OptionalArgument String, title_gt : OptionalArgument String, title_gte : OptionalArgument String, title_contains : OptionalArgument String, title_not_contains : OptionalArgument String, title_starts_with : OptionalArgument String, title_not_starts_with : OptionalArgument String, title_ends_with : OptionalArgument String, title_not_ends_with : OptionalArgument String }


{-| Encode a SectionSubscriptionFilterNode into a value that can be used as an argument.
-}
encodeSectionSubscriptionFilterNode : SectionSubscriptionFilterNode -> Value
encodeSectionSubscriptionFilterNode (SectionSubscriptionFilterNode input) =
    Encode.maybeObject
        [ ( "id", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "title", Encode.string |> Encode.optional input.title ), ( "title_not", Encode.string |> Encode.optional input.title_not ), ( "title_in", (Encode.string |> Encode.list) |> Encode.optional input.title_in ), ( "title_not_in", (Encode.string |> Encode.list) |> Encode.optional input.title_not_in ), ( "title_lt", Encode.string |> Encode.optional input.title_lt ), ( "title_lte", Encode.string |> Encode.optional input.title_lte ), ( "title_gt", Encode.string |> Encode.optional input.title_gt ), ( "title_gte", Encode.string |> Encode.optional input.title_gte ), ( "title_contains", Encode.string |> Encode.optional input.title_contains ), ( "title_not_contains", Encode.string |> Encode.optional input.title_not_contains ), ( "title_starts_with", Encode.string |> Encode.optional input.title_starts_with ), ( "title_not_starts_with", Encode.string |> Encode.optional input.title_not_starts_with ), ( "title_ends_with", Encode.string |> Encode.optional input.title_ends_with ), ( "title_not_ends_with", Encode.string |> Encode.optional input.title_not_ends_with ) ]


{-| Type for the UpdateChapter input object.
-}
type UpdateChapter
    = UpdateChapter { id : API.Scalar.Id, number : OptionalArgument Int, part : OptionalArgument Int }


{-| Encode a UpdateChapter into a value that can be used as an argument.
-}
encodeUpdateChapter : UpdateChapter -> Value
encodeUpdateChapter (UpdateChapter input) =
    Encode.maybeObject
        [ ( "id", (\(API.Scalar.Id raw) -> Encode.string raw) input.id |> Just ), ( "number", Encode.int |> Encode.optional input.number ), ( "part", Encode.int |> Encode.optional input.part ) ]


{-| Type for the UpdateFile input object.
-}
type UpdateFile
    = UpdateFile { id : API.Scalar.Id, name : OptionalArgument String }


{-| Encode a UpdateFile into a value that can be used as an argument.
-}
encodeUpdateFile : UpdateFile -> Value
encodeUpdateFile (UpdateFile input) =
    Encode.maybeObject
        [ ( "id", (\(API.Scalar.Id raw) -> Encode.string raw) input.id |> Just ), ( "name", Encode.string |> Encode.optional input.name ) ]


{-| Type for the UpdateSection input object.
-}
type UpdateSection
    = UpdateSection { id : API.Scalar.Id, title : OptionalArgument String }


{-| Encode a UpdateSection into a value that can be used as an argument.
-}
encodeUpdateSection : UpdateSection -> Value
encodeUpdateSection (UpdateSection input) =
    Encode.maybeObject
        [ ( "id", (\(API.Scalar.Id raw) -> Encode.string raw) input.id |> Just ), ( "title", Encode.string |> Encode.optional input.title ) ]


{-| Type for the UpdateUser input object.
-}
type UpdateUser
    = UpdateUser { id : API.Scalar.Id }


{-| Encode a UpdateUser into a value that can be used as an argument.
-}
encodeUpdateUser : UpdateUser -> Value
encodeUpdateUser (UpdateUser input) =
    Encode.maybeObject
        [ ( "id", (\(API.Scalar.Id raw) -> Encode.string raw) input.id |> Just ) ]


{-| Type for the UserFilter input object.
-}
type UserFilter
    = UserFilter { and : OptionalArgument (List UserFilter), or : OptionalArgument (List UserFilter), auth0UserId : OptionalArgument String, auth0UserId_not : OptionalArgument String, auth0UserId_in : OptionalArgument (List String), auth0UserId_not_in : OptionalArgument (List String), auth0UserId_lt : OptionalArgument String, auth0UserId_lte : OptionalArgument String, auth0UserId_gt : OptionalArgument String, auth0UserId_gte : OptionalArgument String, auth0UserId_contains : OptionalArgument String, auth0UserId_not_contains : OptionalArgument String, auth0UserId_starts_with : OptionalArgument String, auth0UserId_not_starts_with : OptionalArgument String, auth0UserId_ends_with : OptionalArgument String, auth0UserId_not_ends_with : OptionalArgument String, createdAt : OptionalArgument API.Scalar.DateTime, createdAt_not : OptionalArgument API.Scalar.DateTime, createdAt_in : OptionalArgument (List API.Scalar.DateTime), createdAt_not_in : OptionalArgument (List API.Scalar.DateTime), createdAt_lt : OptionalArgument API.Scalar.DateTime, createdAt_lte : OptionalArgument API.Scalar.DateTime, createdAt_gt : OptionalArgument API.Scalar.DateTime, createdAt_gte : OptionalArgument API.Scalar.DateTime, id : OptionalArgument API.Scalar.Id, id_not : OptionalArgument API.Scalar.Id, id_in : OptionalArgument (List API.Scalar.Id), id_not_in : OptionalArgument (List API.Scalar.Id), id_lt : OptionalArgument API.Scalar.Id, id_lte : OptionalArgument API.Scalar.Id, id_gt : OptionalArgument API.Scalar.Id, id_gte : OptionalArgument API.Scalar.Id, id_contains : OptionalArgument API.Scalar.Id, id_not_contains : OptionalArgument API.Scalar.Id, id_starts_with : OptionalArgument API.Scalar.Id, id_not_starts_with : OptionalArgument API.Scalar.Id, id_ends_with : OptionalArgument API.Scalar.Id, id_not_ends_with : OptionalArgument API.Scalar.Id, updatedAt : OptionalArgument API.Scalar.DateTime, updatedAt_not : OptionalArgument API.Scalar.DateTime, updatedAt_in : OptionalArgument (List API.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List API.Scalar.DateTime), updatedAt_lt : OptionalArgument API.Scalar.DateTime, updatedAt_lte : OptionalArgument API.Scalar.DateTime, updatedAt_gt : OptionalArgument API.Scalar.DateTime, updatedAt_gte : OptionalArgument API.Scalar.DateTime }


{-| Encode a UserFilter into a value that can be used as an argument.
-}
encodeUserFilter : UserFilter -> Value
encodeUserFilter (UserFilter input) =
    Encode.maybeObject
        [ ( "and", (encodeUserFilter |> Encode.list) |> Encode.optional input.and ), ( "or", (encodeUserFilter |> Encode.list) |> Encode.optional input.or ), ( "auth0UserId", Encode.string |> Encode.optional input.auth0UserId ), ( "auth0UserId_not", Encode.string |> Encode.optional input.auth0UserId_not ), ( "auth0UserId_in", (Encode.string |> Encode.list) |> Encode.optional input.auth0UserId_in ), ( "auth0UserId_not_in", (Encode.string |> Encode.list) |> Encode.optional input.auth0UserId_not_in ), ( "auth0UserId_lt", Encode.string |> Encode.optional input.auth0UserId_lt ), ( "auth0UserId_lte", Encode.string |> Encode.optional input.auth0UserId_lte ), ( "auth0UserId_gt", Encode.string |> Encode.optional input.auth0UserId_gt ), ( "auth0UserId_gte", Encode.string |> Encode.optional input.auth0UserId_gte ), ( "auth0UserId_contains", Encode.string |> Encode.optional input.auth0UserId_contains ), ( "auth0UserId_not_contains", Encode.string |> Encode.optional input.auth0UserId_not_contains ), ( "auth0UserId_starts_with", Encode.string |> Encode.optional input.auth0UserId_starts_with ), ( "auth0UserId_not_starts_with", Encode.string |> Encode.optional input.auth0UserId_not_starts_with ), ( "auth0UserId_ends_with", Encode.string |> Encode.optional input.auth0UserId_ends_with ), ( "auth0UserId_not_ends_with", Encode.string |> Encode.optional input.auth0UserId_not_ends_with ), ( "createdAt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt ), ( "createdAt_not", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gte ), ( "id", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "updatedAt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gte ) ]


{-| Type for the UserSubscriptionFilter input object.
-}
type UserSubscriptionFilter
    = UserSubscriptionFilter { and : OptionalArgument (List UserSubscriptionFilter), or : OptionalArgument (List UserSubscriptionFilter), mutation_in : OptionalArgument (List API.Enum.ModelMutationType_.ModelMutationType_), updatedFields_contains : OptionalArgument String, updatedFields_contains_every : OptionalArgument (List String), updatedFields_contains_some : OptionalArgument (List String), node : OptionalArgument UserSubscriptionFilterNode }


{-| Encode a UserSubscriptionFilter into a value that can be used as an argument.
-}
encodeUserSubscriptionFilter : UserSubscriptionFilter -> Value
encodeUserSubscriptionFilter (UserSubscriptionFilter input) =
    Encode.maybeObject
        [ ( "and", (encodeUserSubscriptionFilter |> Encode.list) |> Encode.optional input.and ), ( "or", (encodeUserSubscriptionFilter |> Encode.list) |> Encode.optional input.or ), ( "mutation_in", (Encode.enum API.Enum.ModelMutationType_.toString |> Encode.list) |> Encode.optional input.mutation_in ), ( "updatedFields_contains", Encode.string |> Encode.optional input.updatedFields_contains ), ( "updatedFields_contains_every", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_every ), ( "updatedFields_contains_some", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_some ), ( "node", encodeUserSubscriptionFilterNode |> Encode.optional input.node ) ]


{-| Type for the UserSubscriptionFilterNode input object.
-}
type UserSubscriptionFilterNode
    = UserSubscriptionFilterNode { auth0UserId : OptionalArgument String, auth0UserId_not : OptionalArgument String, auth0UserId_in : OptionalArgument (List String), auth0UserId_not_in : OptionalArgument (List String), auth0UserId_lt : OptionalArgument String, auth0UserId_lte : OptionalArgument String, auth0UserId_gt : OptionalArgument String, auth0UserId_gte : OptionalArgument String, auth0UserId_contains : OptionalArgument String, auth0UserId_not_contains : OptionalArgument String, auth0UserId_starts_with : OptionalArgument String, auth0UserId_not_starts_with : OptionalArgument String, auth0UserId_ends_with : OptionalArgument String, auth0UserId_not_ends_with : OptionalArgument String, createdAt : OptionalArgument API.Scalar.DateTime, createdAt_not : OptionalArgument API.Scalar.DateTime, createdAt_in : OptionalArgument (List API.Scalar.DateTime), createdAt_not_in : OptionalArgument (List API.Scalar.DateTime), createdAt_lt : OptionalArgument API.Scalar.DateTime, createdAt_lte : OptionalArgument API.Scalar.DateTime, createdAt_gt : OptionalArgument API.Scalar.DateTime, createdAt_gte : OptionalArgument API.Scalar.DateTime, id : OptionalArgument API.Scalar.Id, id_not : OptionalArgument API.Scalar.Id, id_in : OptionalArgument (List API.Scalar.Id), id_not_in : OptionalArgument (List API.Scalar.Id), id_lt : OptionalArgument API.Scalar.Id, id_lte : OptionalArgument API.Scalar.Id, id_gt : OptionalArgument API.Scalar.Id, id_gte : OptionalArgument API.Scalar.Id, id_contains : OptionalArgument API.Scalar.Id, id_not_contains : OptionalArgument API.Scalar.Id, id_starts_with : OptionalArgument API.Scalar.Id, id_not_starts_with : OptionalArgument API.Scalar.Id, id_ends_with : OptionalArgument API.Scalar.Id, id_not_ends_with : OptionalArgument API.Scalar.Id, updatedAt : OptionalArgument API.Scalar.DateTime, updatedAt_not : OptionalArgument API.Scalar.DateTime, updatedAt_in : OptionalArgument (List API.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List API.Scalar.DateTime), updatedAt_lt : OptionalArgument API.Scalar.DateTime, updatedAt_lte : OptionalArgument API.Scalar.DateTime, updatedAt_gt : OptionalArgument API.Scalar.DateTime, updatedAt_gte : OptionalArgument API.Scalar.DateTime }


{-| Encode a UserSubscriptionFilterNode into a value that can be used as an argument.
-}
encodeUserSubscriptionFilterNode : UserSubscriptionFilterNode -> Value
encodeUserSubscriptionFilterNode (UserSubscriptionFilterNode input) =
    Encode.maybeObject
        [ ( "auth0UserId", Encode.string |> Encode.optional input.auth0UserId ), ( "auth0UserId_not", Encode.string |> Encode.optional input.auth0UserId_not ), ( "auth0UserId_in", (Encode.string |> Encode.list) |> Encode.optional input.auth0UserId_in ), ( "auth0UserId_not_in", (Encode.string |> Encode.list) |> Encode.optional input.auth0UserId_not_in ), ( "auth0UserId_lt", Encode.string |> Encode.optional input.auth0UserId_lt ), ( "auth0UserId_lte", Encode.string |> Encode.optional input.auth0UserId_lte ), ( "auth0UserId_gt", Encode.string |> Encode.optional input.auth0UserId_gt ), ( "auth0UserId_gte", Encode.string |> Encode.optional input.auth0UserId_gte ), ( "auth0UserId_contains", Encode.string |> Encode.optional input.auth0UserId_contains ), ( "auth0UserId_not_contains", Encode.string |> Encode.optional input.auth0UserId_not_contains ), ( "auth0UserId_starts_with", Encode.string |> Encode.optional input.auth0UserId_starts_with ), ( "auth0UserId_not_starts_with", Encode.string |> Encode.optional input.auth0UserId_not_starts_with ), ( "auth0UserId_ends_with", Encode.string |> Encode.optional input.auth0UserId_ends_with ), ( "auth0UserId_not_ends_with", Encode.string |> Encode.optional input.auth0UserId_not_ends_with ), ( "createdAt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt ), ( "createdAt_not", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gte ), ( "id", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(API.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "updatedAt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (\(API.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gte ) ]
